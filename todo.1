
1. heap - add array of data / hepify
2. sll(any) - re-test 
3. sll(walk) / Iter
4. binary_tree - iter (ycombinator)
5. 


https://markphelps.me/posts/trying-out-generics-in-go/ -- good info on Generics







Decent explanationof Red Black Trees
	http://www.btechsmartclass.com/data_structures/red-black-trees.html
	Geeks for Geeks has AVL and Red-Black



































4. add concurency to binary_tree -> binary_tree_ts
5. generate site
7. videos on generics





3. add iteration to binary_tree
4. hash-table












g_lib 
	2. Add documentation
	2. abs

article
	1. Figure out how to publish a blog on jamstack and do an article on this.

	Priority Q - Heap Based
	Priority Q - DLL based

	Circular Queue









CLI/Server:
	What about a shared gRPC based tool (server) that has data in it.
	Make the tool extensible to multiple named services
	Add in actual security so you can expose it over the net
	Have a "CLI" that allows access/testing
	Have a web interface
	Allow "tracking" of data structures - so you can watch them chainge (for debuging / understanding)
	Render d.s. into GUI graphs (tree,heep,etc)
	Faster than Redis / Better to Understand than memcached.

	Make it extensible!








TextTemplates with go generics
	- extend to have blocks
	- extend to use data better

PgDatabase (pgx) with tempaltes
	- Type passed in to describe Projected Columns of Select
	- Type passed in to describe bind vars


go with generics available:
	https://go.dev/blog/go1.18beta1


https://www.geeksforgeeks.org/priority-queue-set-1-introduction/

	Merge Srot

	Binary Heap

	n-Ary tree





Table of Contents
What are the Best Top Programming Languages to Learn in 2022?

	1. Javascript
	2. Python
	3. Go
	5. Kotlin
	8. Swift

https://www.northeastern.edu/graduate/blog/most-popular-programming-languages/ -- langues with job numbers and pay

https://www.ferretdb.io/
